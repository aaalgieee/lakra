@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-family: 'Inter', sans-serif;
  }
  
  /* Prevent browser extension interference */
  body {
    /* Prevent autofill extensions from injecting styles */
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
  
  /* Protect form elements from extension manipulation */
  input, textarea, select {
    /* Prevent autofill extensions from overriding styles */
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    /* Ensure proper z-index for modals */
    z-index: auto;
  }
  
  /* Protect modal overlays from extension interference */
  .modal-overlay {
    z-index: 9999 !important;
  }
  
  /* Prevent extension overlays from appearing above our modals */
  [data-react-portal] {
    z-index: 10000 !important;
  }
}

@layer components {
  .btn-primary {
    @apply bg-primary-500 hover:bg-primary-600 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200;
  }
  
  .btn-secondary {
    @apply bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 px-4 rounded-lg transition-colors duration-200;
  }
  
  .input-field {
    @apply w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent;
  }
  
  .textarea-field {
    @apply w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent resize-y min-h-[100px];
  }
  
  /* Custom radio button and checkbox styles */
  .radio-field {
    appearance: auto;
    -webkit-appearance: radio;
    -moz-appearance: radio;
    width: 1rem;
    height: 1rem;
    border: 2px solid #d1d5db;
    border-radius: 50%;
    background-color: white;
    cursor: pointer;
    position: relative;
    flex-shrink: 0;
  }
  
  .radio-field:checked {
    border-color: #3b82f6;
    background-color: #3b82f6;
  }
  
  .radio-field:checked::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background-color: white;
  }
  
  .radio-field:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }
  
  .checkbox-field {
    appearance: auto;
    -webkit-appearance: checkbox;
    -moz-appearance: checkbox;
    width: 1rem;
    height: 1rem;
    border: 2px solid #d1d5db;
    border-radius: 0.25rem;
    background-color: white;
    cursor: pointer;
    position: relative;
    flex-shrink: 0;
  }
  
  .checkbox-field:checked {
    border-color: #3b82f6;
    background-color: #3b82f6;
  }
  
  .checkbox-field:checked::before {
    content: 'âœ“';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 12px;
    font-weight: bold;
  }
  
  .checkbox-field:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }
  
  .annotation-card {
    @apply bg-white rounded-lg shadow-md p-6 border border-gray-200;
  }
  
  .rating-button {
    @apply w-10 h-10 rounded-full border-2 flex items-center justify-center font-medium transition-all duration-200 cursor-pointer;
  }
  
  .rating-button.selected {
    @apply bg-primary-500 border-primary-500 text-white;
  }
  
  .rating-button:not(.selected) {
    @apply border-gray-300 text-gray-600 hover:border-primary-300 hover:text-primary-500;
  }

  /* New highlight-related styles */
  .highlight-error {
    @apply bg-red-200 border-b-2 border-red-400 px-1 rounded cursor-pointer;
  }
  
  .highlight-suggestion {
    @apply bg-blue-200 border-b-2 border-blue-400 px-1 rounded cursor-pointer;
  }
  
  /* Animation styles for form transitions */
  .animate-fadeIn {
    animation: fadeIn 0.5s ease-in-out;
  }
  
  .animate-slideIn {
    animation: slideIn 0.5s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideIn {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }
  
  /* Extension compatibility styles */
  .extension-safe-modal {
    position: fixed !important;
    z-index: 10000 !important;
    background: rgba(0, 0, 0, 0.5) !important;
  }
  
  .extension-safe-form {
    position: relative !important;
    z-index: 10001 !important;
  }
  
  /* Prevent autofill extension overlays */
  .autocomplete-off {
    -webkit-autocomplete: off;
    -moz-autocomplete: off;
    autocomplete: off;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-10px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
  to {
    opacity: 0;
    transform: scale(0.95) translateY(-10px);
  }
}

@keyframes helpPulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.8;
  }
}

@keyframes bounce {
  0%, 20%, 60%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-3px);
  }
  80% {
    transform: translateY(-1px);
  }
}

/* Extra animation utilities */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from { transform: translateY(20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

@keyframes pulse {
  0% { opacity: 1; }
  50% { opacity: 0.6; }
  100% { opacity: 1; }
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-out;
}

.animate-slideIn {
  animation: slideIn 0.6s ease-out;
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Line clamp utilities */
.line-clamp-1 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}

.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

/* Transition utilities */
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}
